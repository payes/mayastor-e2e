#!/usr/bin/env groovy

// Mayastor QA Staging pipeline Jenkins script.

// On-demand E2E infra configuration
// https://mayadata.atlassian.net/wiki/spaces/MS/pages/247332965/Test+infrastructure#On-Demand-E2E-K8S-Clusters

def e2e_build_cluster_job='k8s-build-cluster' // Jenkins job to build cluster
def e2e_destroy_cluster_job='k8s-destroy-cluster' // Jenkins job to destroy cluster
// Environment to run e2e test in (job param of $e2e_build_cluster_job)
def e2e_environment="hcloud-kubeadm"

e2e_image_tag='nightly-stable'
e2e_reports_dir='artifacts/reports/'
e2e_test_profile = 'staging'

String cron_schedule = "H */8 * * *"

xray_send_report=true
xray_test_plan='MQ-1619'

pipeline {
  agent none
  options {
    timeout(time: 7, unit: 'HOURS')
  }
  triggers {
    cron(cron_schedule)
  }
  stages {
    stage('run e2e') {
      agent { label 'nixos' }
      environment {
        KUBECONFIG = "${env.WORKSPACE}/${e2e_environment}/modules/k8s/secrets/admin.conf"
      }
      steps {
        script {
          common = load "./pipelines/common/common.groovy"
          loki_run_id = common.GetLokiRunId()
          sh "mkdir -p ./${e2e_reports_dir}"

          failed_tests = common.RunTestsOnePerCluster(e2e_test_profile,
                                                      e2e_image_tag,
                                                      loki_run_id,
                                                      e2e_build_cluster_job,
                                                      e2e_destroy_cluster_job,
                                                      e2e_environment,
                                                      e2e_reports_dir)

          if (failed_tests != "") {
              error("The following tests failed: " + failed_tests)
          }
        }
      }
      post {
        always {
          archiveArtifacts 'artifacts/**/*.*'
          // handle junit results on success or failure
          junit "${e2e_reports_dir}/*.xml"
          script {
            if (xray_send_report == true) {
              common = load "${env.WORKSPACE}/pipelines/common/common.groovy"
              pipeline = common.GetJobBaseName()
              summary = "Pipeline: ${pipeline}, test plan: ${xray_test_plan}, git branch: ${env.BRANCH_name}, tested image tag: ${e2e_image_tag}"
              common.SendXrayReport(xray_test_plan, summary, e2e_reports_dir)
            }
          }
        }
      }//post
    }//stage 'run e2e'
  }
}
