#!/usr/bin/env groovy

import java.util.concurrent.LinkedBlockingQueue
import java.util.concurrent.TimeUnit

// On-demand E2E infra configuration
// https://mayadata.atlassian.net/wiki/spaces/MS/pages/247332965/Test+infrastructure#On-Demand-E2E-K8S-Clusters

def e2e_build_cluster_job='k8s-build-cluster' // Jenkins job to build cluster
def e2e_destroy_cluster_job='k8s-destroy-cluster' // Jenkins job to destroy cluster
// Environment to run e2e test in (job param of $e2e_build_cluster_job)
def e2e_environment="hcloud-kubeadm"
// Global variable to pass current k8s job between stages
def test_tag=""
// Tests Queue
LinkedBlockingQueue tests_queue = [] as LinkedBlockingQueue
// Failed tests
LinkedBlockingQueue failed_tests = [] as LinkedBlockingQueue

e2e_image_tag='nightly-stable'
e2e_reports_dir='artifacts/reports/'
e2e_test_profile = 'nightly-stable'

String cron_schedule = "H 0 * * *"
xray_send_report=true
xray_test_plan='MQ-1482'

pipeline {
  agent none
  options {
    timeout(time: 23, unit: 'HOURS')
    buildDiscarder(logRotator(numToKeepStr: '365', artifactNumToKeepStr: '365'))
  }
//  triggers {
//    cron(cron_schedule)
//  }
  stages {
    stage('build docker images') {
      agent { label 'nixos-mayastor' }
      steps {
        script {
          common = load "./pipelines/common/common.groovy"
          parms = [
            mayastorBranch : 'develop',
            mcpBranch : 'develop',
            test_tag : 'mcp-' + common.GetTestTag()
            ]
          common.BuildMCPImages(parms)
        }
      }
      post {
        // Always remove all docker images because they are usually used just once
        // and underlaying pkgs are already cached by nix so they can be easily
        // recreated.
        always {
          sh 'docker image prune --all --force'
        }
      }
    }//stage build docker images
  }//stages
}
