// Code generated by go-swagger; DO NOT EDIT.

package workload_monitor

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"net/http"

	"github.com/go-openapi/runtime"

	"mayastor-e2e/tools/extended-test-framework/workload_monitor/models"
)

// GetWorkloadByRegistrantOKCode is the HTTP code returned for type GetWorkloadByRegistrantOK
const GetWorkloadByRegistrantOKCode int = 200

/*GetWorkloadByRegistrantOK corresponding Workload item returned to caller

swagger:response getWorkloadByRegistrantOK
*/
type GetWorkloadByRegistrantOK struct {

	/*
	  In: Body
	*/
	Payload *models.Workload `json:"body,omitempty"`
}

// NewGetWorkloadByRegistrantOK creates GetWorkloadByRegistrantOK with default headers values
func NewGetWorkloadByRegistrantOK() *GetWorkloadByRegistrantOK {

	return &GetWorkloadByRegistrantOK{}
}

// WithPayload adds the payload to the get workload by registrant o k response
func (o *GetWorkloadByRegistrantOK) WithPayload(payload *models.Workload) *GetWorkloadByRegistrantOK {
	o.Payload = payload
	return o
}

// SetPayload sets the payload to the get workload by registrant o k response
func (o *GetWorkloadByRegistrantOK) SetPayload(payload *models.Workload) {
	o.Payload = payload
}

// WriteResponse to the client
func (o *GetWorkloadByRegistrantOK) WriteResponse(rw http.ResponseWriter, producer runtime.Producer) {

	rw.WriteHeader(200)
	if o.Payload != nil {
		payload := o.Payload
		if err := producer.Produce(rw, payload); err != nil {
			panic(err) // let the recovery middleware deal with this
		}
	}
}

// GetWorkloadByRegistrantBadRequestCode is the HTTP code returned for type GetWorkloadByRegistrantBadRequest
const GetWorkloadByRegistrantBadRequestCode int = 400

/*GetWorkloadByRegistrantBadRequest Bad request (malformed/invalid resource id)

swagger:response getWorkloadByRegistrantBadRequest
*/
type GetWorkloadByRegistrantBadRequest struct {

	/*
	  In: Body
	*/
	Payload *models.RequestOutcome `json:"body,omitempty"`
}

// NewGetWorkloadByRegistrantBadRequest creates GetWorkloadByRegistrantBadRequest with default headers values
func NewGetWorkloadByRegistrantBadRequest() *GetWorkloadByRegistrantBadRequest {

	return &GetWorkloadByRegistrantBadRequest{}
}

// WithPayload adds the payload to the get workload by registrant bad request response
func (o *GetWorkloadByRegistrantBadRequest) WithPayload(payload *models.RequestOutcome) *GetWorkloadByRegistrantBadRequest {
	o.Payload = payload
	return o
}

// SetPayload sets the payload to the get workload by registrant bad request response
func (o *GetWorkloadByRegistrantBadRequest) SetPayload(payload *models.RequestOutcome) {
	o.Payload = payload
}

// WriteResponse to the client
func (o *GetWorkloadByRegistrantBadRequest) WriteResponse(rw http.ResponseWriter, producer runtime.Producer) {

	rw.WriteHeader(400)
	if o.Payload != nil {
		payload := o.Payload
		if err := producer.Produce(rw, payload); err != nil {
			panic(err) // let the recovery middleware deal with this
		}
	}
}

// GetWorkloadByRegistrantNotFoundCode is the HTTP code returned for type GetWorkloadByRegistrantNotFound
const GetWorkloadByRegistrantNotFoundCode int = 404

/*GetWorkloadByRegistrantNotFound no corresponding workload found

swagger:response getWorkloadByRegistrantNotFound
*/
type GetWorkloadByRegistrantNotFound struct {
}

// NewGetWorkloadByRegistrantNotFound creates GetWorkloadByRegistrantNotFound with default headers values
func NewGetWorkloadByRegistrantNotFound() *GetWorkloadByRegistrantNotFound {

	return &GetWorkloadByRegistrantNotFound{}
}

// WriteResponse to the client
func (o *GetWorkloadByRegistrantNotFound) WriteResponse(rw http.ResponseWriter, producer runtime.Producer) {

	rw.Header().Del(runtime.HeaderContentType) //Remove Content-Type on empty responses

	rw.WriteHeader(404)
}
