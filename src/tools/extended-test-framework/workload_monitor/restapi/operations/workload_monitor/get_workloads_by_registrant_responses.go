// Code generated by go-swagger; DO NOT EDIT.

package workload_monitor

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"net/http"

	"github.com/go-openapi/runtime"

	"mayastor-e2e/tools/extended-test-framework/workload_monitor/models"
)

// GetWorkloadsByRegistrantOKCode is the HTTP code returned for type GetWorkloadsByRegistrantOK
const GetWorkloadsByRegistrantOKCode int = 200

/*GetWorkloadsByRegistrantOK corresponding Workload item(s) returned to caller

swagger:response getWorkloadsByRegistrantOK
*/
type GetWorkloadsByRegistrantOK struct {

	/*
	  In: Body
	*/
	Payload []*models.Workload `json:"body,omitempty"`
}

// NewGetWorkloadsByRegistrantOK creates GetWorkloadsByRegistrantOK with default headers values
func NewGetWorkloadsByRegistrantOK() *GetWorkloadsByRegistrantOK {

	return &GetWorkloadsByRegistrantOK{}
}

// WithPayload adds the payload to the get workloads by registrant o k response
func (o *GetWorkloadsByRegistrantOK) WithPayload(payload []*models.Workload) *GetWorkloadsByRegistrantOK {
	o.Payload = payload
	return o
}

// SetPayload sets the payload to the get workloads by registrant o k response
func (o *GetWorkloadsByRegistrantOK) SetPayload(payload []*models.Workload) {
	o.Payload = payload
}

// WriteResponse to the client
func (o *GetWorkloadsByRegistrantOK) WriteResponse(rw http.ResponseWriter, producer runtime.Producer) {

	rw.WriteHeader(200)
	payload := o.Payload
	if payload == nil {
		// return empty array
		payload = make([]*models.Workload, 0, 50)
	}

	if err := producer.Produce(rw, payload); err != nil {
		panic(err) // let the recovery middleware deal with this
	}
}

// GetWorkloadsByRegistrantBadRequestCode is the HTTP code returned for type GetWorkloadsByRegistrantBadRequest
const GetWorkloadsByRegistrantBadRequestCode int = 400

/*GetWorkloadsByRegistrantBadRequest Bad request (malformed/invalid resource id)

swagger:response getWorkloadsByRegistrantBadRequest
*/
type GetWorkloadsByRegistrantBadRequest struct {

	/*
	  In: Body
	*/
	Payload *models.RequestOutcome `json:"body,omitempty"`
}

// NewGetWorkloadsByRegistrantBadRequest creates GetWorkloadsByRegistrantBadRequest with default headers values
func NewGetWorkloadsByRegistrantBadRequest() *GetWorkloadsByRegistrantBadRequest {

	return &GetWorkloadsByRegistrantBadRequest{}
}

// WithPayload adds the payload to the get workloads by registrant bad request response
func (o *GetWorkloadsByRegistrantBadRequest) WithPayload(payload *models.RequestOutcome) *GetWorkloadsByRegistrantBadRequest {
	o.Payload = payload
	return o
}

// SetPayload sets the payload to the get workloads by registrant bad request response
func (o *GetWorkloadsByRegistrantBadRequest) SetPayload(payload *models.RequestOutcome) {
	o.Payload = payload
}

// WriteResponse to the client
func (o *GetWorkloadsByRegistrantBadRequest) WriteResponse(rw http.ResponseWriter, producer runtime.Producer) {

	rw.WriteHeader(400)
	if o.Payload != nil {
		payload := o.Payload
		if err := producer.Produce(rw, payload); err != nil {
			panic(err) // let the recovery middleware deal with this
		}
	}
}

// GetWorkloadsByRegistrantNotFoundCode is the HTTP code returned for type GetWorkloadsByRegistrantNotFound
const GetWorkloadsByRegistrantNotFoundCode int = 404

/*GetWorkloadsByRegistrantNotFound no corresponding workload(s) found

swagger:response getWorkloadsByRegistrantNotFound
*/
type GetWorkloadsByRegistrantNotFound struct {
}

// NewGetWorkloadsByRegistrantNotFound creates GetWorkloadsByRegistrantNotFound with default headers values
func NewGetWorkloadsByRegistrantNotFound() *GetWorkloadsByRegistrantNotFound {

	return &GetWorkloadsByRegistrantNotFound{}
}

// WriteResponse to the client
func (o *GetWorkloadsByRegistrantNotFound) WriteResponse(rw http.ResponseWriter, producer runtime.Producer) {

	rw.Header().Del(runtime.HeaderContentType) //Remove Content-Type on empty responses

	rw.WriteHeader(404)
}
