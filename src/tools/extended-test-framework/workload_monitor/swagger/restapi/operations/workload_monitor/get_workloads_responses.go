// Code generated by go-swagger; DO NOT EDIT.

package workload_monitor

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"net/http"

	"github.com/go-openapi/runtime"

	"mayastor-e2e/tools/extended-test-framework/workload_monitor/swagger/models"
)

// GetWorkloadsOKCode is the HTTP code returned for type GetWorkloadsOK
const GetWorkloadsOKCode int = 200

/*GetWorkloadsOK Workload items were returned

swagger:response getWorkloadsOK
*/
type GetWorkloadsOK struct {

	/*
	  In: Body
	*/
	Payload []*models.Workload `json:"body,omitempty"`
}

// NewGetWorkloadsOK creates GetWorkloadsOK with default headers values
func NewGetWorkloadsOK() *GetWorkloadsOK {

	return &GetWorkloadsOK{}
}

// WithPayload adds the payload to the get workloads o k response
func (o *GetWorkloadsOK) WithPayload(payload []*models.Workload) *GetWorkloadsOK {
	o.Payload = payload
	return o
}

// SetPayload sets the payload to the get workloads o k response
func (o *GetWorkloadsOK) SetPayload(payload []*models.Workload) {
	o.Payload = payload
}

// WriteResponse to the client
func (o *GetWorkloadsOK) WriteResponse(rw http.ResponseWriter, producer runtime.Producer) {

	rw.WriteHeader(200)
	payload := o.Payload
	if payload == nil {
		// return empty array
		payload = make([]*models.Workload, 0, 50)
	}

	if err := producer.Produce(rw, payload); err != nil {
		panic(err) // let the recovery middleware deal with this
	}
}

// GetWorkloadsNotFoundCode is the HTTP code returned for type GetWorkloadsNotFound
const GetWorkloadsNotFoundCode int = 404

/*GetWorkloadsNotFound no corresponding workload(s) were returned

swagger:response getWorkloadsNotFound
*/
type GetWorkloadsNotFound struct {
}

// NewGetWorkloadsNotFound creates GetWorkloadsNotFound with default headers values
func NewGetWorkloadsNotFound() *GetWorkloadsNotFound {

	return &GetWorkloadsNotFound{}
}

// WriteResponse to the client
func (o *GetWorkloadsNotFound) WriteResponse(rw http.ResponseWriter, producer runtime.Producer) {

	rw.Header().Del(runtime.HeaderContentType) //Remove Content-Type on empty responses

	rw.WriteHeader(404)
}
