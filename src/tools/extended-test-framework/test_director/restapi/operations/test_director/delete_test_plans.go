// Code generated by go-swagger; DO NOT EDIT.

package test_director

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the generate command

import (
	"net/http"

	"github.com/go-openapi/runtime/middleware"
)

// DeleteTestPlansHandlerFunc turns a function with the right signature into a delete test plans handler
type DeleteTestPlansHandlerFunc func(DeleteTestPlansParams) middleware.Responder

// Handle executing the request and returning a response
func (fn DeleteTestPlansHandlerFunc) Handle(params DeleteTestPlansParams) middleware.Responder {
	return fn(params)
}

// DeleteTestPlansHandler interface for that can handle valid delete test plans params
type DeleteTestPlansHandler interface {
	Handle(DeleteTestPlansParams) middleware.Responder
}

// NewDeleteTestPlans creates a new http.Handler for the delete test plans operation
func NewDeleteTestPlans(ctx *middleware.Context, handler DeleteTestPlansHandler) *DeleteTestPlans {
	return &DeleteTestPlans{Context: ctx, Handler: handler}
}

/* DeleteTestPlans swagger:route DELETE /td/testplans test-director deleteTestPlans

deletes all plans except the default plan

*/
type DeleteTestPlans struct {
	Context *middleware.Context
	Handler DeleteTestPlansHandler
}

func (o *DeleteTestPlans) ServeHTTP(rw http.ResponseWriter, r *http.Request) {
	route, rCtx, _ := o.Context.RouteInfo(r)
	if rCtx != nil {
		*r = *rCtx
	}
	var Params = NewDeleteTestPlansParams()
	if err := o.Context.BindValidRequest(r, route, &Params); err != nil { // bind params
		o.Context.Respond(rw, r, route.Produces, route, err)
		return
	}

	res := o.Handler.Handle(Params) // actually handle the request
	o.Context.Respond(rw, r, route.Produces, route, res)

}
