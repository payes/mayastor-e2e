// Code generated by go-swagger; DO NOT EDIT.

package test_director

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the generate command

import (
	"net/http"

	"github.com/go-openapi/runtime/middleware"
)

// GetTestPlansHandlerFunc turns a function with the right signature into a get test plans handler
type GetTestPlansHandlerFunc func(GetTestPlansParams) middleware.Responder

// Handle executing the request and returning a response
func (fn GetTestPlansHandlerFunc) Handle(params GetTestPlansParams) middleware.Responder {
	return fn(params)
}

// GetTestPlansHandler interface for that can handle valid get test plans params
type GetTestPlansHandler interface {
	Handle(GetTestPlansParams) middleware.Responder
}

// NewGetTestPlans creates a new http.Handler for the get test plans operation
func NewGetTestPlans(ctx *middleware.Context, handler GetTestPlansHandler) *GetTestPlans {
	return &GetTestPlans{Context: ctx, Handler: handler}
}

/* GetTestPlans swagger:route GET /td/testplans test-director getTestPlans

returns a list of Test Plans registered with the director

*/
type GetTestPlans struct {
	Context *middleware.Context
	Handler GetTestPlansHandler
}

func (o *GetTestPlans) ServeHTTP(rw http.ResponseWriter, r *http.Request) {
	route, rCtx, _ := o.Context.RouteInfo(r)
	if rCtx != nil {
		*r = *rCtx
	}
	var Params = NewGetTestPlansParams()
	if err := o.Context.BindValidRequest(r, route, &Params); err != nil { // bind params
		o.Context.Respond(rw, r, route.Produces, route, err)
		return
	}

	res := o.Handler.Handle(Params) // actually handle the request
	o.Context.Respond(rw, r, route.Produces, route, res)

}
