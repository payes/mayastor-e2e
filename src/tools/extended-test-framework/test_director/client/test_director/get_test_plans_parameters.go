// Code generated by go-swagger; DO NOT EDIT.

package test_director

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"context"
	"net/http"
	"time"

	"github.com/go-openapi/errors"
	"github.com/go-openapi/runtime"
	cr "github.com/go-openapi/runtime/client"
	"github.com/go-openapi/strfmt"
	"github.com/go-openapi/swag"
)

// NewGetTestPlansParams creates a new GetTestPlansParams object,
// with the default timeout for this client.
//
// Default values are not hydrated, since defaults are normally applied by the API server side.
//
// To enforce default values in parameter, use SetDefaults or WithDefaults.
func NewGetTestPlansParams() *GetTestPlansParams {
	return &GetTestPlansParams{
		timeout: cr.DefaultTimeout,
	}
}

// NewGetTestPlansParamsWithTimeout creates a new GetTestPlansParams object
// with the ability to set a timeout on a request.
func NewGetTestPlansParamsWithTimeout(timeout time.Duration) *GetTestPlansParams {
	return &GetTestPlansParams{
		timeout: timeout,
	}
}

// NewGetTestPlansParamsWithContext creates a new GetTestPlansParams object
// with the ability to set a context for a request.
func NewGetTestPlansParamsWithContext(ctx context.Context) *GetTestPlansParams {
	return &GetTestPlansParams{
		Context: ctx,
	}
}

// NewGetTestPlansParamsWithHTTPClient creates a new GetTestPlansParams object
// with the ability to set a custom HTTPClient for a request.
func NewGetTestPlansParamsWithHTTPClient(client *http.Client) *GetTestPlansParams {
	return &GetTestPlansParams{
		HTTPClient: client,
	}
}

/* GetTestPlansParams contains all the parameters to send to the API endpoint
   for the get test plans operation.

   Typically these are written to a http.Request.
*/
type GetTestPlansParams struct {

	/* DefaultPlanOnly.

	   if set true return only the default Test Plan
	*/
	DefaultPlanOnly *bool

	timeout    time.Duration
	Context    context.Context
	HTTPClient *http.Client
}

// WithDefaults hydrates default values in the get test plans params (not the query body).
//
// All values with no default are reset to their zero value.
func (o *GetTestPlansParams) WithDefaults() *GetTestPlansParams {
	o.SetDefaults()
	return o
}

// SetDefaults hydrates default values in the get test plans params (not the query body).
//
// All values with no default are reset to their zero value.
func (o *GetTestPlansParams) SetDefaults() {
	var (
		defaultPlanOnlyDefault = bool(false)
	)

	val := GetTestPlansParams{
		DefaultPlanOnly: &defaultPlanOnlyDefault,
	}

	val.timeout = o.timeout
	val.Context = o.Context
	val.HTTPClient = o.HTTPClient
	*o = val
}

// WithTimeout adds the timeout to the get test plans params
func (o *GetTestPlansParams) WithTimeout(timeout time.Duration) *GetTestPlansParams {
	o.SetTimeout(timeout)
	return o
}

// SetTimeout adds the timeout to the get test plans params
func (o *GetTestPlansParams) SetTimeout(timeout time.Duration) {
	o.timeout = timeout
}

// WithContext adds the context to the get test plans params
func (o *GetTestPlansParams) WithContext(ctx context.Context) *GetTestPlansParams {
	o.SetContext(ctx)
	return o
}

// SetContext adds the context to the get test plans params
func (o *GetTestPlansParams) SetContext(ctx context.Context) {
	o.Context = ctx
}

// WithHTTPClient adds the HTTPClient to the get test plans params
func (o *GetTestPlansParams) WithHTTPClient(client *http.Client) *GetTestPlansParams {
	o.SetHTTPClient(client)
	return o
}

// SetHTTPClient adds the HTTPClient to the get test plans params
func (o *GetTestPlansParams) SetHTTPClient(client *http.Client) {
	o.HTTPClient = client
}

// WithDefaultPlanOnly adds the defaultPlanOnly to the get test plans params
func (o *GetTestPlansParams) WithDefaultPlanOnly(defaultPlanOnly *bool) *GetTestPlansParams {
	o.SetDefaultPlanOnly(defaultPlanOnly)
	return o
}

// SetDefaultPlanOnly adds the defaultPlanOnly to the get test plans params
func (o *GetTestPlansParams) SetDefaultPlanOnly(defaultPlanOnly *bool) {
	o.DefaultPlanOnly = defaultPlanOnly
}

// WriteToRequest writes these params to a swagger request
func (o *GetTestPlansParams) WriteToRequest(r runtime.ClientRequest, reg strfmt.Registry) error {

	if err := r.SetTimeout(o.timeout); err != nil {
		return err
	}
	var res []error

	if o.DefaultPlanOnly != nil {

		// query param defaultPlanOnly
		var qrDefaultPlanOnly bool

		if o.DefaultPlanOnly != nil {
			qrDefaultPlanOnly = *o.DefaultPlanOnly
		}
		qDefaultPlanOnly := swag.FormatBool(qrDefaultPlanOnly)
		if qDefaultPlanOnly != "" {

			if err := r.SetQueryParam("defaultPlanOnly", qDefaultPlanOnly); err != nil {
				return err
			}
		}
	}

	if len(res) > 0 {
		return errors.CompositeValidationError(res...)
	}
	return nil
}
